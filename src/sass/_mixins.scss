@import "functions";
@import "variables";
@import "media";

@mixin flex-center($direction: row) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
}

@mixin default-page-padding {
  padding: rem(39 0 67 0);
}

@mixin reset-css {
  * {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
  }

  button,
  input,
  text-area {
    font-family: inherit;
  }

  html,
  body {
    width: 100%;
    font-family: $font-primary;
  }

  ul {
    li {
      list-style-type: none;
    }
  }

  a {
    text-decoration: none;
    outline: none;
  }
}

@mixin flex-center-important($direction: row) {
  display: flex !important;
  flex-direction: $direction !important;
  justify-content: center !important;
  align-items: center !important;
}

@mixin flex-column() {
  display: flex;
  flex-direction: column;
}

@mixin size($width, $height: $width) {
  width: rem($width);
  height: rem($height);
}

@mixin size-important($width, $height: $width) {
  width: rem($width) !important;
  height: rem($height) !important;
}

@mixin full-size {
  width: 100%;
  height: 100%;
}

@mixin max-size($width, $height: $width) {
  max-width: rem($width);
  max-height: rem($height);
}

@mixin save-button {
  background-color: $color-success;
  color: $color-text-on-success;
}

@mixin base-title {
  font-family: $font-secondary;
  font-style: normal;
  font-weight: 600;
}

@mixin small-title {
  @include base-title;
  font-size: rem(16);
  line-height: rem(20);
}
@mixin medium-title {
  @include base-title;
  font-size: rem(24);
  line-height: rem(30);

  @include medias($tiny-mobile, $mobile) {
    font-size: rem(19);
    line-height: rem(25);
  }
}
@mixin large-title {
  @include base-title;
  font-size: rem(32);
  line-height: rem(40);

  @include medias($tiny-mobile, $mobile) {
    font-size: rem(25);
    line-height: rem(25);
  }
}

@mixin clamp(
  $property,
  $min-size,
  $scaler,
  $max-size,
  $min-size-left: false,
  $scaler-left: false,
  $max-size-left: false
) {
  @if $min-size-left == false {
    // Set MAX values
    #{$property}: $max-size;
    #{$property}: #{"min(max(#{$min-size}, #{$scaler}), #{$max-size}) "};
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size});
  } @else if $min-size-left == 0 or $min-size-left == auto {
    // Set MAX values
    #{$property}: $max-size $max-size-left;
    #{$property}: #{“min(max(#{$min-size}, #{$scaler}), #{$max-size})
      ”}
      $min-size-left;
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size}) $min-size-left;
  } @else {
    // Set MAX values
    #{$property}: $max-size $max-size-left;
    #{$property}: #{“min(max(#{$min-size}, #{$scaler}), #{$max-size})
      ”}
      #{“min(max(#{$min-size-left}, #{$scaler-left}), #{$max-size-left})
      ”};
    // add second CLAMP and #{} to SASS variables
    #{$property}: clamp(#{$min-size}, #{$scaler}, #{$max-size})
      clamp(#{$min-size-left}, #{$scaler-left}, #{$max-size-left});
  }
}

@mixin clamp-size(
  $min-width,
  $scale,
  $max-width,
  $min-height: $min-width,
  $max-height: $max-width
) {
  @include clamp(width, rem($min-width), $scale, rem($max-width));
  @include clamp(height, rem($min-height), $scale, rem($max-height));
}
