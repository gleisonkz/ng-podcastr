{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json", "e2e/tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
        "curly": ["error", "multi-line"],
        "@angular-eslint/no-input-rename": "off",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "pd",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "pd",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/pipe-prefix": [
          "error",
          {
            "prefixes": ["pd"]
          }
        ],
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": ["Page", "Component"]
          }
        ],
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                "private-static-field",
                "private-instance-field",
                "public-static-field",
                "protected-static-field",
                "public-instance-field",
                "public-decorated-field",
                "public-abstract-field",
                "protected-instance-field",
                "protected-decorated-field",
                "protected-abstract-field",
                "private-decorated-field",
                "private-abstract-field",
                "static-field",
                "public-field",
                "instance-field",
                "protected-field",
                "private-field",
                "abstract-field",
                "constructor",
                "public-static-method",
                "protected-static-method",
                "private-static-method",
                "public-method",
                "protected-method",
                "private-method"
              ]
            }
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variableLike",
            "format": ["camelCase", "UPPER_CASE", "snake_case"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "types": ["function"],
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "has", "can", "did", "will"]
          },
          {
            "selector": "property",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "has", "can", "did", "will"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "types": ["boolean", "string", "string", "number", "array"],
            "modifiers": ["exported"],
            "format": ["UPPER_CASE"]
          },
          {
            "selector": ["enumMember"],
            "format": ["UPPER_CASE"]
          },
          {
            "selector": "enum",
            "format": ["camelCase"],
            "custom": {
              "regex": "^e[A-Z]",
              "match": true
            }
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
